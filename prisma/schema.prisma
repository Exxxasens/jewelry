// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

// Necessary for Next auth
model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? // @db.Text
  access_token             String? // @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? // @db.Text
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  refresh_token_expires_in Int?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @id @map("_id")
  expires    DateTime

  @@unique([identifier, token])
}

enum ProductCategory {
  Rings
  Earrings
  Pendants
  Bracelets
  Piercing
  Chains
  Necklace
  Charms
  Brooches
  CompleteSet
  Religious
  Other
}

// Цвет
enum Color {
  Gray
  Blue
  Beige
  Black
  Brown
  White
  Green
  Red
  Pink
  Multicolored
  Purple
  LightBlue
  Orange
  Yellow
  Silver
  Gold
  Burgundy
}

// Материал
enum Material {
  Gold
  Silver
  Platinum
  JewelryAlloy
  Steel
  Leather
  PlatinumMetals
  Other
}

// Вставка
enum Inserts {
  Diamond
  Fianit
  Sapphire
  Emerald
  Pearl
  Topaz
  Amethyst
  Amber
  Ruby
  Alexandrite
  Garnet
  Other
  Without
}

enum NumberOfStones {
  One
  Two
  Three
  Four
  Five
  Six
  Scattering
  WithoutStones
}

model Brand {
  id      String    @id @default(cuid())
  name    String
  Product Product[]
}

model Product {
  id           String          @id @default(cuid())
  sku          String
  name         String
  description  String
  category     ProductCategory
  brand        Brand           @relation(fields: [brandId], references: [id])
  color        Color
  material     Material
  inserts      Inserts[]
  stones       NumberOfStones
  brandId      String
  ProductMedia ProductMedia[]
}

model ProductMedia {
  id        String @id @default(cuid())
  order     Int
  productId String
  filename  String

  product Product @relation(fields: [productId], references: [id])
  media   Media   @relation(fields: [filename], references: [filename])
}

model Media {
  id               String         @id @default(cuid())
  filename         String         @unique
  filepath         String
  originalFilename String?
  mimetype         String?
  size             Int
  productMedia     ProductMedia[]
}
